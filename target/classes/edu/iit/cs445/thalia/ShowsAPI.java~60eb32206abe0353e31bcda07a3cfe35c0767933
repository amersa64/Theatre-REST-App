package edu.iit.cs445.thalia;

import java.util.ArrayList;

import javax.ws.rs.PathParam;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import adapters.SectionAdapter;
import adapters.SectionNameAdapter;
import adapters.SectionPriceAdapter;
import adapters.ShowAdapter;
import adapters.ShowSeatingAdapter;
import sun.swing.SwingUtilities2.Section;
import testing.testVals;
import thalia.Show;
import thalia.Theatre;


//Sets the path to base URL + /test
@Path("/shows")
public class ShowsAPI {
	 
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public String CreateShow(){
		Show sh = new Show();
		Theatre.getInstance().getShows().add(sh);
		return Theatre.getInstance().getShows().get(Theatre.getInstance().getShows().size()-1).getWid();
	}
	
	@PUT
	@Path("/{wid}")
	@Consumes(MediaType.APPLICATION_JSON)
	public void UpdateShow(@PathParam("wid") String wid){
		 if (wid.equals(null)){
			 return;
		 }
		 for (int i = 0; i < Theatre.getInstance().getShows().size(); i++){
			 if (wid.equals(Theatre.getInstance().getShows().get(i).getWid())){
				 Theatre.getInstance().getShows().get(i).setName("Changed Theatre Name");
				 return;
			 }
		 }
	}
	 
	@GET
	@Path("/{wid}")
	@Produces(MediaType.APPLICATION_JSON)
	public ShowSeatingAdapter ViewShow(@PathParam("wid") String wid){
		if (wid.equals(null)){
			return null;
		}
		for (int i = 0; i < Theatre.getInstance().getShows().size(); i++){
			if (wid.equals(Theatre.getInstance().getShows().get(i).getWid())){
				ShowSeatingAdapter ssa = new ShowSeatingAdapter(Theatre.getInstance().getShows().get(i));
				return ssa;
			}
		}
		return null;
	}
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<ShowAdapter> ViewAllShows(){
		ShowAdapter sh;
		ArrayList<ShowAdapter> listofshows = new ArrayList<ShowAdapter>();
		for (int i = 0; i < Theatre.getInstance().getShows().size(); i++){
			sh = new ShowAdapter(Theatre.getInstance().getShows().get(i));
			listofshows.add(sh);
		}
		return listofshows;
	}
	 
	@GET
	@Path("/{wid}/sections")
	@Produces(MediaType.APPLICATION_JSON)
	public SectionAdapter[] ViewShowSections(@PathParam("wid") String wid){
		if (wid.equals(null)){
			return null;
		}
		for (int i = 0; i < Theatre.getInstance().getShows().size(); i++){
			if (wid.equals(Theatre.getInstance().getShows().get(i).getWid())){
				SectionAdapter[] saa = new SectionAdapter[Theatre.getInstance().getShows().get(i).getSeating_info().length];
				for (int j = 0; j < saa.length; j++){
//					Section section = Theatre.getInstance().getShows().get(i).getSeating_info()[j];
					saa[j] = new SectionNameAdapter(Theatre.getInstance().getShows().get(i).getSeating_info()[j]);
				}
				return saa;
			}
		}
		return null;
	}
}
